# 리스트 복사
# 리스트는 문자열과 마찬가지로 인텍싱과 슬라이싱이 가능하며, len() 함수를 비롯한 여러 내장 함수를 사용할 수 있다. [:]를 사용하면 리스트를 복사할 수 있다. 
myList = ['Thoughts', 'become', 'things.']
newList = myList[:] # 전체 영역 슬라이싱 [:]은 새로운 리스트를 반환한다. 
print(newList)

# [:]를 사용하여 리스트를 복사한 경우, 새로운 리스트를 변경하더라도 기존 리스트는 변경되지 않는다. 
newList[-1] = 'actions.'
print(newList)
print(myList)

# 리스트 내포(comprehension)
# 내포 기능은 파이썬이 다른 언어들에 비해 얼마나 더 고수준 언어 인지를 보여준다. 내포 기능을 사용하면 리스트, 딕셔너리, 셋 같은 열거형 객체의 전체 또는 일부 원소를 변경하여 새로운 열거형 객체를 생성할 수 있다. 보통 다른 언어에서는 이런 작업을 for 반복문으로 처리하는데, 파이썬의 내포 기능을 사용하면 훨씬 간결하게 처리할 수 있다. 
# 다음은 for 반복문을 사용해서 리스트의 모든 원소에 대하여 제곱을 구하는 예제다. 
nums = [1, 2, 3, 4, 5]
squares = []
for x in nums:
  squares.append(x ** 2)
print(squares)

# 위의 코드는 리스트 내포를 사용하여 더 간단히 바꿀 수 있다. 
nums2 = [1, 2, 3, 4, 5]
squares2 = [x ** 2 for x in nums2]
print(squares2)

# 특히, 리스트에서 조건에 맞는 원소만 골라서 가공한 뒤 새로운 리스트로 생성할 때 편리하게 사용할 수 있으므로 익혀두자. 다음은 결과가 짝수일 때만 원소로 저장하는 코드다. 
nums3 = [1, 2, 3, 4, 5]
squares3 = [x ** 2 for x in nums3 if x % 2 == 0]
print(squares3)